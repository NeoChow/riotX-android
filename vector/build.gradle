apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    correctErrorTypes = true
}

androidExtensions {
    experimental = true
}

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0

static def getGitTimestamp() {
    def cmd = 'git show -s --format=%ct'
    return cmd.execute().text.trim() as Long
}

static def generateVersionCodeFromTimestamp() {
    // It's unix timestamp divided by 10: It's incremented by one every 10 seconds.
    return (getGitTimestamp() / 10).toInteger()
}

def generateVersionCodeFromVersionName() {
    return versionMajor * 10000 + versionMinor * 100 + versionPatch
}

static def gitRevision() {
    def cmd = "git rev-parse --short HEAD"
    return cmd.execute().text.trim()
}

static def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

static def gitBranchName() {
    def cmd = "git name-rev --name-only HEAD"
    return cmd.execute().text.trim()
}

project.android.buildTypes.all { buildType ->
    buildType.javaCompileOptions.annotationProcessorOptions.arguments =
            [
                    validateEpoxyModelUsage: String.valueOf(buildType.name == 'debug')
            ]
}

def buildNumber = System.getenv("BUILDKITE_BUILD_NUMBER") as Integer ?: 0

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "im.vector.riotredesign"
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled true
        versionCode generateVersionCodeFromTimestamp()
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_REVISION", "\"${gitRevision()}\""
        resValue "string", "git_revision", "\"${gitRevision()}\""

        buildConfigField "String", "GIT_REVISION_DATE", "\"${gitRevisionDate()}\""
        resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""

        buildConfigField "String", "GIT_BRANCH_NAME", "\"${gitBranchName()}\""
        resValue "string", "git_branch_name", "\"${gitBranchName()}\""

        buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
        resValue "string", "build_number", "\"${buildNumber}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('./signature/debug.keystore')
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            resValue "bool", "debug_mode", "true"
            buildConfigField "boolean", "LOW_PRIVACY_LOG_ENABLE", "false"
            buildConfigField "boolean", "SHOW_HIDDEN_TIMELINE_EVENTS", "false"

            signingConfig signingConfigs.debug
        }

        release {
            resValue "bool", "debug_mode", "false"
            buildConfigField "boolean", "LOW_PRIVACY_LOG_ENABLE", "false"
            buildConfigField "boolean", "SHOW_HIDDEN_TIMELINE_EVENTS", "false"

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "store"

    productFlavors {
        gplay {
            dimension "store"

            buildConfigField "boolean", "ALLOW_FCM_USE", "true"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"G\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"GooglePlay\""
        }

        fdroid {
            dimension "store"

            buildConfigField "boolean", "ALLOW_FCM_USE", "false"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"F\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"FDroid\""
        }
    }

    lintOptions {
        lintConfig file("lint.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    def epoxy_version = "3.3.0"
    def arrow_version = "0.8.2"
    def coroutines_version = "1.0.1"
    def markwon_version = '3.0.0'
    def big_image_viewer_version = '1.5.6'
    def glide_version = '4.9.0'
    def moshi_version = '1.8.0'

    implementation project(":matrix-sdk-android")
    implementation project(":matrix-sdk-android-rx")
    implementation 'com.android.support:multidex:1.0.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
    implementation 'androidx.core:core-ktx:1.0.1'

    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // OSS License
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Log
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Debug
    implementation 'com.facebook.stetho:stetho:1.5.0'

    // rx
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'
    // TODO RxBindings3 exists
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'

    implementation("com.airbnb.android:epoxy:$epoxy_version")
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"
    implementation 'com.airbnb.android:mvrx:1.0.1'

    // Work
    implementation "android.arch.work:work-runtime-ktx:1.0.0"

    // Functional Programming
    implementation "io.arrow-kt:arrow-core:$arrow_version"

    // Pref
    implementation 'androidx.preference:preference:1.0.0'

    // UI
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation 'com.google.android.material:material:1.1.0-alpha04'
    implementation 'me.gujun.android:span:1.7'
    implementation "ru.noties.markwon:core:$markwon_version"
    implementation "ru.noties.markwon:html:$markwon_version"
    implementation 'me.saket:better-link-movement-method:2.2.0'

    // Passphrase strength helper
    implementation 'com.nulab-inc:zxcvbn:1.2.5'

    //Alerter
    implementation 'com.tapadoo.android:alerter:4.0.3'

    implementation 'com.otaliastudios:autocomplete:1.1.0'

    // Butterknife
    implementation 'com.jakewharton:butterknife:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'

    // Shake detection
    implementation 'com.squareup:seismic:1.0.2'

    // Image Loading
    implementation "com.github.piasy:BigImageViewer:$big_image_viewer_version"
    implementation "com.github.piasy:GlideImageLoader:$big_image_viewer_version"
    implementation "com.github.piasy:ProgressPieIndicator:$big_image_viewer_version"
    implementation "com.github.piasy:GlideImageViewFactory:$big_image_viewer_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.danikula:videocache:2.7.1'

    // Badge for compatibility
    implementation 'me.leolin:ShortcutBadger:1.1.2@aar'

    // File picker
    implementation 'com.github.jaiselrahman:FilePicker:1.2.2'

    // DI
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"

    // gplay flavor only
    gplayImplementation('com.google.firebase:firebase-messaging:19.0.1') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }

    // TESTS
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

if (!getGradle().getStartParameter().getTaskRequests().toString().contains("Fdroid")) {
    apply plugin: 'com.google.gms.google-services'
}
